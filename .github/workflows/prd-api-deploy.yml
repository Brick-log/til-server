name: prd-api-deploy
on:
  push:
    branches: [ "release" ]
  pull_request:
    branches: [ "release" ]
    types: [ closed ] # when PR closed
    paths:
      - 'libs/**'
      - 'src/api/**'
jobs:
  build:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
      - name: Build and Push Docker image to Amazon ECR
        run: |
              ./gradlew jib -PbuildLevel=prd
        env:
          ECR_USERNAME: AWS
          ECR_PASSWORD: ${{ steps.ecr-login.outputs.ecr-password }}
          DATASOURCE_URL: ${{ secrets.DATASOURCE_URL}}
          DATASOURCE_PASSWORD: ${{ secrets.DATASOURCE_PASSWORD }}
          GOOGLE_OAUTH_CLIENT_ID: ${{ secrets.GOOGLE_OAUTH_CLIENT_ID }}
          GOOGLE_OAUTH_CLIENT_SECRET: ${{ secrets.GOOGLE_OAUTH_CLIENT_SECRET }}
          GOOGLE_OAUTH_REDIRECT_URI: ${{ secrets.GOOGLE_OAUTH_REDIRECT_URI}}
      - name: Fill in the new image ID in the Amazon ECS task definition
        id: task-def
        uses: aws-actions/amazon-ecs-render-task-definition@v1
        with:
              task-definition: task-definition.json
              container-name: my-container
              image: $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/my-ecr-repo:${{ github.sha }}
      - name: Deploy Amazon ECS task definition
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          task-definition: ${{ steps.task-def.outputs.task-definition }}
          service: my-service
          cluster: my-cluster
          wait-for-service-stability: true